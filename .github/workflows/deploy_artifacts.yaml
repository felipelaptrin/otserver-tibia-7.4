name: CI

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checks-out repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Check if packer folder changed to build new AMI
        uses: dorny/paths-filter@v2
        id: changes_on_packer_folder
        with:
          filters: |
            src:
              - 'infrastructure/packer/**'

      - name: Initialize packer image
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: infrastructure/packer/server.pkr.hcl

      - name: Build packer image
        if: steps.changes_on_packer_folder.outputs.src == 'true'
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=false -on-error=abort"
          target: infrastructure/packer/server.pkr.hcl

      - name: Build docker image of server
        run: docker build -t server .

      - name: Substitute docker compose build by created image
        uses: mikefarah/yq@v4.27.2
        with:
          cmd: |
            yq -i ".services.server.image = .services.server.build | del(.services.server.build)" docker-compose.yml
            yq -i '.services.server.image = "server"' docker-compose.yml

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: otserver
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker-compose down
          docker image tag server $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker image tag server $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest
